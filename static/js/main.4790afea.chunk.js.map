{"version":3,"sources":["App.module.css","components/current-tasks.jsx","components/filter-button-tasks.jsx","components/SetItem/Date/date-marker.jsx","components/SetItem/item.jsx","components/tasks-list.jsx","components/SetItem/set-item.jsx","redux/main-reducer.jsx","redux/filter-reducer.jsx","components/SetItem/set-item-container.jsx","App.js","serviceWorker.js","redux/redux-store.jsx","index.js"],"names":["module","exports","CurrentTasks","tasks","className","s","currentTasks","filter","task","status","length","FilterButtonTasks","changeFilter","removeAllDone","filterButtonsBox","onClick","some","clearDone","SetDate","date","Date","toLocaleDateString","state","numeration","MyDate","this","React","Component","Item","props","activeStatusChange","setState","statusChange","deActivateStatusChange","editTask","onStatusChange","e","target","value","index","deleteTask","editStatus","item","statusTask","src","onChange","autoFocus","onBlur","taskFalse","close","ListTasks","map","t","id","key","newTask","SetForm","onInputChange","name","handleSubmit","preventDefault","text","addTask","filterTasks","activeFilter","removeAllTasks","onSubmit","placeholder","setTask","add","clearAll","initialState","mainReducer","action","type","shortid","generate","filtersReducer","compose","connect","App","container","made","version","Boolean","window","location","hostname","match","reducers","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4790afea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-box\":\"App_main-box__3QpgH\",\"container\":\"App_container__2csWO\",\"currentTasks\":\"App_currentTasks__10M_S\",\"setTask\":\"App_setTask__2BJzV\",\"add\":\"App_add__3D2wN\",\"clearAll\":\"App_clearAll__ynivX\",\"item\":\"App_item__1B0KE\",\"task\":\"App_task__3DKSB\",\"taskFalse\":\"App_taskFalse__4kbf3\",\"statusTask\":\"App_statusTask__2kSqu\",\"close\":\"App_close__XcBzj\",\"filterButtonsBox\":\"App_filterButtonsBox__3Ozar\",\"clearDone\":\"App_clearDone__1RVDX\",\"made\":\"App_made__1Jn2h\",\"version\":\"App_version__slsOb\",\"MyDate\":\"App_MyDate__2LOrZ\",\"numeration\":\"App_numeration__3cdN9\"};","import React from 'react'\r\nimport s from './../App.module.css'\r\n\r\n\r\nconst CurrentTasks = ({tasks}) => {\r\n    return (\r\n        <div className={s.currentTasks}> <b>Active tasks:</b> {tasks.filter(task => !task.status).length} </div>\r\n    )\r\n}\r\n\r\nexport default CurrentTasks;","import React from 'react'\r\nimport s from './../App.module.css'\r\n\r\nconst FilterButtonTasks = ({currentTasks,changeFilter,removeAllDone}) => {\r\n    \r\n    return (\r\n        <div className={s.filterButtonsBox}>\r\n            <button  onClick={() => changeFilter('all')}> all </button>\r\n            <button  onClick={() => changeFilter('done')}> done</button>\r\n            <button  onClick={() => changeFilter('active')}> active</button>\r\n            {currentTasks.some(task => task.status)  \r\n                ? <button onClick={removeAllDone} className={s.clearDone}>clear done</button> \r\n                : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterButtonTasks;\r\n","import React from 'react'\r\nimport s from './../../../App.module.css'\r\n\r\nclass SetDate extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        const today = new Date(),\r\n            date = today.toLocaleDateString()\r\n\r\n        this.state = {\r\n            date: date\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <span className={s.numeration} />\r\n                <div className={s.MyDate}>{this.state.date}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SetDate;","import React from 'react'\nimport s from \"./../../App.module.css\";\nimport SetDate from './Date/date-marker';\n\nclass Item extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            statusChange: false,\n            task: this.props.task,\n            index: 0\n        }\n    }\n\n    activeStatusChange = () => {\n        this.setState( {\n            statusChange: true\n           }\n       );        \n    }\n\n    deActivateStatusChange = () => {\n        this.setState({\n          statusChange: false\n        });\n        this.props.editTask(this.state.task);\n    };\n\n    onStatusChange = (e) => {\n        this.setState({\n            task: e.target.value\n        }) \n    }\n\n    \n    \n    \n    render(){\n        const {deleteTask,status,editStatus} = this.props;\n\n        return (\n            <div>\n                <div className={s.item}>\n                    <SetDate/>\n                    <span onClick={editStatus} className={s.statusTask}>\n                        {status ? <img src=\"https://img.icons8.com/doodle/48/000000/checkmark.png\"/> \n                                : <img src=\"https://img.icons8.com/emoji/48/000000/red-circle-emoji.png\"/>}\n                    </span>\n\n                    { this.state.statusChange \n                        ? <input className={s.task} onChange={this.onStatusChange} autoFocus={true} onBlur={this.deActivateStatusChange} value={this.state.task}/> \n                        : <span  className={this.props.status === true ? s.task : s.taskFalse} onClick={this.activeStatusChange}> {this.state.task} </span>}\n                    <span onClick={deleteTask} className={s.close}>\n                        <img src=\"https://img.icons8.com/color/48/000000/close-window.png\"/>\n                    </span>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Item;\n","import React from 'react'\r\nimport Item from './SetItem/item'\r\n\r\n\r\nconst ListTasks = ({currentTasks,editStatus,deleteTask,editTask,tasks}) => {\r\n\r\n    return (\r\n        currentTasks.map(t => (<Item editStatus={() => editStatus(t.id)}\r\n        deleteTask={() => deleteTask(t.id)}\r\n        key={t.id} task={t.task} status={t.status}  \r\n        editTask={(newTask) => editTask(t.id, newTask)}\r\n        tasks={tasks}/>))\r\n    )\r\n}\r\n\r\nexport default ListTasks;","import React from \"react\";\nimport s from \"./../../App.module.css\";\nimport CurrentTasks from \"../current-tasks\";\nimport FilterButtonTasks from \"../filter-button-tasks\";\nimport ListTasks from \"../tasks-list\";\n\nclass SetForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: ''\n    }\n  }\n\n  onInputChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    if(this.state.text === '') {\n      return undefined\n    } \n    this.props.addTask(this.state.text)\n    this.setState({\n      text: ''\n    })\n  }\n\n  filterTasks = (tasks, activeFilter) => {\n\n    switch (activeFilter) {\n      case 'done': {\n        return tasks.filter(t => t.status);\n      }\n      case 'active': {\n        return tasks.filter(t => !t.status);\n      }\n      default:\n        return tasks;\n    }\n  }\n\n\n  render() {\n    const {tasks,editStatus,deleteTask,removeAllTasks,editTask,removeAllDone,changeFilter} = this.props;\n    const currentTasks = this.filterTasks(this.props.tasks, this.props.filter);\n\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <input name={\"text\"} onChange={this.onInputChange} value={this.state.text}placeholder={\"SET YOUR TASK\"} className={s.setTask}/>\n            <button onClick={this.handleSubmit} className={s.add}>ADD</button>\n            <button onClick={removeAllTasks} className={s.clearAll}>Clear</button>\n          </div> \n        </form>\n        <CurrentTasks tasks={tasks}/>\n        <ListTasks tasks={tasks} currentTasks={currentTasks} editStatus={editStatus} deleteTask={deleteTask} editTask={editTask}/>\n        <FilterButtonTasks  currentTasks={currentTasks} changeFilter={changeFilter} removeAllDone={removeAllDone}/> \n      </div>\n    )\n  }\n}\n\n\n\nexport default SetForm;\n\n","import React from 'react'\r\nimport shortid from 'shortid';\r\n\r\nconst ADD_TASK = 'ADD_TASK'\r\nconst EDIT_STATUS = 'EDIT_STATUS'\r\nconst TASK_DELETE = 'TASK_DELETE'\r\nconst REMOVE_ALL_DONE = 'REMOVE_ALL_DONE'\r\nconst REMOVE_ALL_TASKS = 'REMOVE_ALL_TASKS'\r\nconst EDIT_TASK = 'EDIT_TASK'\r\n\r\n\r\n\r\nconst initialState = {\r\n    tasks: []\r\n};\r\n\r\n\r\nconst mainReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_TASK: {\r\n            return {\r\n                ...state,\r\n                tasks: [{\r\n                    id: shortid.generate(),\r\n                    task: action.task,\r\n                    status: false\r\n                }, ...state.tasks]\r\n            }\r\n        }\r\n\r\n        case EDIT_STATUS: {\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.map(task => task.id === action.id ? {...task, status: !task.status} : task)\r\n            }\r\n        }\r\n\r\n        case TASK_DELETE: {\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.filter(t => t.id !== action.id)\r\n            }\r\n        }\r\n\r\n        case REMOVE_ALL_DONE: {\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.filter(t => !t.status)\r\n            }\r\n        }\r\n\r\n        case REMOVE_ALL_TASKS: {\r\n            return {\r\n                ...state,\r\n                tasks: []\r\n            }\r\n        }\r\n\r\n        case EDIT_TASK: {\r\n            return {\r\n                ...state, \r\n                tasks: state.tasks.map((t) => t.id === action.id ? {...t, task: action.newTask} : t)\r\n            }\r\n        }\r\n\r\n    default:\r\n        return state\r\n    }\r\n}\r\n\r\n//window.store.getState().mainReducer.tasks\r\n\r\nexport const addTask = task => ({type: 'ADD_TASK', task});\r\nexport const editStatus = id => ({type: 'EDIT_STATUS', id})\r\nexport const deleteTask = id => ({type: 'TASK_DELETE', id})\r\nexport const removeAllDone = () => ({type:'REMOVE_ALL_DONE'})\r\nexport const removeAllTasks = () => ({type: 'REMOVE_ALL_TASKS'})\r\nexport const editTask = (id,newTask) => ({type: 'EDIT_TASK', id, newTask})\r\n\r\n\r\nexport default mainReducer;\r\n\r\n\r\n","const CHANGE_FILTER = 'CHANGE_FILTER';\r\n\r\nconst baseFilter = 'all';\r\n\r\nconst filtersReducer = (state = baseFilter, action) => {\r\n    switch (action.type) {\r\n      case CHANGE_FILTER: {\r\n        return action.activeFilter;\r\n      }\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n\r\nexport const changeFilter = activeFilter => ({type: 'CHANGE_FILTER', activeFilter})\r\n\r\n\r\nexport default filtersReducer;","import React from 'react'\r\nimport SetForm from './set-item'\r\nimport { compose } from 'redux'\r\nimport { addTask, editStatus, deleteTask,removeAllDone,removeAllTasks,editTask} from '../../redux/main-reducer';\r\nimport {changeFilter} from '../../redux/filter-reducer'\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n\r\nexport class SetFormContainer extends React.Component {\r\n\r\n    render(){\r\n        return (\r\n            <SetForm />\r\n        )\r\n        \r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        tasks: state.mainReducer.tasks,\r\n        filter: state.filtersReducer\r\n    }\r\n}\r\n\r\n\r\nexport default compose(connect(mapStateToProps,{editStatus ,addTask,deleteTask,changeFilter,removeAllDone,removeAllTasks,editTask}))(SetForm)\r\n    \r\n\r\n","import React from 'react'\nimport s from './App.module.css';\nimport SetFormContainer from './components/SetItem/set-item-container';\n\nconst App = () => {\n  \n  return (\n    <div>\n      <div className={s.container}>\n        <h1> It's me, <b>Tasker</b>. Let me refresh your memory.</h1>> \n        <SetFormContainer   />\n        <div className={s.made}>Made by <b>Dima Kulikovskiy </b> &#169; 2020</div>\n        <div className={s.version}>Version: <v>1 .1</v></div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers, createStore, applyMiddleware, compose } from \"redux\";\r\nimport mainReducer from \"./main-reducer\";\r\nimport filtersReducer from \"./filter-reducer\"\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\n\r\n\r\nconst reducers = combineReducers({\r\n    mainReducer,\r\n    filtersReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\nexport default store;\r\n\r\nwindow.store = store ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/redux-store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}